package org.example.desafioforum.service;

import com.auth0.jwt.JWT;
import com.auth0.jwt.algorithms.Algorithm;
import org.example.desafioforum.model.Usuario;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Service;
import java.time.Instant;
import java.time.temporal.ChronoUnit;

@Service
public class TokenService {

    @Value("${jwt.secret}")
    private String secret;

    @Value("${jwt.expiration}")
    private long expiration;

   public String gerarToken(Authentication authentication) {
        return JWT.create()
                .withSubject(usuario.getUsername())
                .withExpiresAt(Instant.now().plusMillis(expiration))
                .sign(Algorithm.HMAC256(secret));
   }

   public String validarToken(String token) {
    return JWT.require(Algorithm.HMAC256(secret))
            .build()
            .verify(token)
            .getSubject();
}

 
public String getSubject(String token) {
    return JWT.require(Algorithm.HMAC256(secret))
            .build()
            .verify(token)
            .getSubject();
}

}