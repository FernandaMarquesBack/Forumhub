package org.example.desafioforum.service;
import org.example.desafioforum.model.Usuario;
import org.example.desafioforum.repository.UsuarioRepository;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

@Service
public class AutenticacaoService implements UserDetailsService {

    private final UsuarioRepository repository;
    private final PasswordEncoder passwordEncoder;

    public AutenticacaoService(UsuarioRepository repository, 
    PasswordEncoder passwordEncoder) {

        this.repository = repository;
        this.passwordEncoder = passwordEncoder;
    }
public Usuario autenticar(String login, String senha) {
        Usuario usuario = repository.findByLogin(login)
                .orElseThrow(() -> new RuntimeException("Usuário não encontrado"));

        if (!passwordEncoder.matches(senha, usuario.getSenha())) {
            throw new RuntimeException("Senha incorreta");
        }

        return usuario;
    }
    @Override
    public UserDetails loadUserByUsername(String username)
     throws UsernameNotFoundException {
        return repository.findByLogin(username)
                .orElseThrow(() -> 
                new UsernameNotFoundException("Usuário não encontrado"));
    }
}
